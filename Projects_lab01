#Kaitlin Morgan
#<!---------------Project 1: Half Pyramid------------>

#Ask user for number of levels and character to make up pyramid blocks
levels = int(input("How many levels? "))
blocks = input("Enter a symbol to use to build the pyramid: ")

#Range to determine how big pyramid should be
for pyramid in range(1,levels +1):
#Prints the specified character times the number of levels the user entered
#to make pyramid
    print(pyramid * blocks)

#<!-------------Project 2: Full Pyramid-------------->

#Ask user for number of levels and character to make up pyramid blocks
levels = int(input("How many levels? "))
blocks = input("Enter a symbol to use to build the pyramid: ")

#Range to determine how big pyramid should be
for pyramid in range(1, levels +1):
#If level is zero, nothing shows up
    if(pyramid == 0):
        print(blocks * pyramid)
#Printing pyramid in centered formation (couldn't get it to stop aligning left?)
    else:
        print(' ' + blocks*(pyramid*2-1) + ' ')

#<!-------------Project 3: Pyramid Fix-------------->

#Ask user for number of levels and character to make up pyramid blocks
levels = int(input("How many levels? "))
blocks = input("Enter a symbol to use to build the pyramid: ")

#Define length of entered character
len_blocks = len(blocks)

#Range to determine how big pyramid should be
for pyramid in range(1,levels +1):
#Specify character length that the pyramid cannot work for
    if len_blocks > 1:
        print("Sorry, you can only enter one character.")
#Otherwise, print the pyramid if one character entered for specified levels
    else:
        print(pyramid * blocks)

#<!-------------Project 4: Parabola-------------->

#Starting value of x
x_start = int(input("Enter starting range value for x:"))
#Ending value of x
x_end = int(input("Enter ending range value for x:"))
#Scalar for parabola
scale = int(input("Enter a scaling factor:"))

#Defining x as na integer
x = int()

#Defining equation for parabola
y = int(x**2/scale)

#Specifying parabola range and printing
for prabola in range(x_start,x_end):
    print("*"*parabola*y)

#<!-------------Project 5: Circle-------------->

#Asking user for circle radius
r = int(input("Enter the circle's radius: "))

#Specifying width, height, random integers in equation
#In terms of radius
width = r*3
height = r*3
a = r
b = r
#Specifying space between *'s
spacing = 2

#Defining 'invisible' plot ranges for circle
circle = [[' ' for x in range(width)] for y in range(height)]

#Using defined plot to help draw circle
for y in range(height):
    for x in range(width):
#Defining equation of circle and spacing
        if abs((x-a)**2 + (y-b)**2 - r**2) < spacing**2:
#Assigning character to circle shape
            circle[y][x] = '*'

#Tells lines to connect with character and show circle
for plot in circle:
    print(' '.join(plot))
